#!/usr/bin/perl
use strict;
use warnings;

# Configuration file directory
my $config_dir = "$ENV{HOME}/.config/monitor-configs";
my $config_file = "$config_dir/configs.txt";

# Check if configuration number was provided
if (@ARGV == 0) {
    print "Usage: mctrl <configuration_number>\n";
    print "       mctrl list    - List all saved configurations\n";
    print "       mctrl help    - Show this help message\n";
    exit 1;
}

my $arg = $ARGV[0];

# Handle special commands
if ($arg eq "help") {
    print "mctrl - Monitor Control Script\n\n";
    print "Usage:\n";
    print "  mctrl <number>     Apply monitor configuration <number>\n";
    print "  mctrl list         List all saved configurations\n";
    print "  mctrl help         Show this help message\n\n";
    print "To save a new configuration, use the 'mextract' command.\n";
    exit 0;
}

# Check if config file exists
unless (-f $config_file) {
    die "Error: No monitor configurations found.\nUse 'mextract' to save your first configuration.\n";
}

# Load configurations
my %configs = ();
open my $fh, '<', $config_file or die "Cannot read config file: $!\n";
while (my $line = <$fh>) {
    chomp $line;
    if ($line =~ /^(\d+):\s*(.+)$/) {
        $configs{$1} = $2;
    }
}
close $fh;

# Handle list command
if ($arg eq "list") {
    if (keys %configs == 0) {
        print "No configurations saved.\n";
        print "Use 'mextract' to save monitor configurations.\n";
        exit 0;
    }

    print "Saved monitor configurations:\n";
    print "=" x 40 . "\n";
    for my $num (sort {$a <=> $b} keys %configs) {
        print "Configuration $num:\n";
        print "  $configs{$num}\n\n";
    }
    exit 0;
}

# Validate configuration number
unless ($arg =~ /^\d+$/) {
    die "Error: Configuration number must be an integer.\nUse 'mctrl list' to see available configurations.\n";
}

my $config_num = $arg;

# Check if configuration exists
unless (exists $configs{$config_num}) {
    die "Error: Configuration $config_num not found.\nUse 'mctrl list' to see available configurations.\n";
}

# Get the command to execute
my $command = $configs{$config_num};

print "Applying monitor configuration $config_num...\n";
print "Command: $command\n";

# Execute the command
my $result = system($command);

if ($result == 0) {
    print "Monitor configuration $config_num applied successfully!\n";
} else {
    my $exit_code = $result >> 8;
    die "Error: Failed to apply monitor configuration (exit code: $exit_code)\n";
}
